# serverless.yml

service: serverless-flask

plugins:
  - serverless-python-requirements
  - serverless-wsgi
  - serverless-dynamodb-local

configValidationMode: error

custom:
  tableName: '${self:provider.stage}-users-table'
  wsgi:
    app: app.app
    pythonBin: python
    packRequirements: false
  pythonRequirements:
    dockerizePip: non-linux
  dynamodb:
    start:
      migrate: true
      port: 5555
    stages:
      - dev

provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: ap-northeast-1
  lambdaHashingVersion: 20201221
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - { "Fn::GetAtt": [ "UsersDynamoDBTable", "Arn" ] }
  environment:
    USERS_TABLE: ${self:custom.tableName}

functions:
  app:
    handler: wsgi_handler.handler
    events:
      - http:
          method: ANY
          path: '{proxy+}'
  getUser:
    handler: wsgi_handler.handler
    events:
      - http:
          method: GET
          path: '/users/{proxy+}'
  createUser:
    handler: wsgi_handler.handler
    events:
      - http:
          method: POST
          path: '/users'

resources:
  Resources:
    UsersDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: userId
            AttributeType: S
        KeySchema:
          -
            AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}